services:
  blue-h11g:
    volumes:
      - ..:/workspaces:z
    build:
      context: .
    command: []
    environment:
      NODE_ENV: development
    ports:
      - 8000:8000
    depends_on:
      - dragonfly
      - rmq
    # network_mode: service:dragonfly
  rmq:
    security_opt:
      - label=disable
    image: 'docker.io/bitnami/rabbitmq:4.1.0-debian-12-r0'
    # image: 'docker.io/bitnami/rabbitmq:4.1.0-management'
    ports:
      - 5672:5672     # AMQP
      - 15672:15672   # Management UI
      - 61613:61613   # STOMP protocol port (default)
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_USERNAME: user2
      RABBITMQ_PASSWORD: password
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_ENABLED_PLUGINS: rabbitmq_management,rabbitmq_stomp,rabbitmq_jms_topic_exchange # formatting from here https://gitlab.diamond.ac.uk/daq/tools/rabbitmq-for-dummy/-/blob/main/values.yaml?ref_type=heads
    volumes:
      - rabbitmqdata:/bitnami/rabbitmq
  dragonfly:
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    ulimits:
      memlock: -1
    ports:
      - 6379:6379
    # For better performance, consider `host` mode instead `port` to avoid docker NAT.
    # `host` mode is NOT currently supported in Swarm Mode.
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
    # network_mode: "host"
    volumes:
      - dragonflydata:/data
volumes:
  dragonflydata:
  rabbitmqdata:
    driver: local
    driver_opts:
      type: none
      device: /tmp/rabbitmqdata # NOTE on WSL might need to `chmod -R 0777` this dir so that rmq can write its config
      o: bind
